/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Paciente;
import org.hibernate.Session;
import util.Utilitaria;

/**
 *
 * @author Moisés
 */
public class ListaPaciente extends javax.swing.JDialog {

    /**
     * Creates new form ListaPAciente
     */
    private Paciente paciente;

    public ListaPaciente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public ListaPaciente(java.awt.Frame parent, boolean modal, Paciente p) {
        super(parent, modal);
        initComponents();
        paciente = p;
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonAddConsulta = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFCpf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFID = new javax.swing.JTextField();
        jBPesquisarPorNome = new javax.swing.JButton();
        jBPesquisarPorID = new javax.swing.JButton();
        jBPesquisarPorCPF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableListaPacientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jButtonAddConsulta.setText("Adicionar Consulta");
        jButtonAddConsulta.setPreferredSize(new java.awt.Dimension(200, 35));
        jButtonAddConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddConsultaActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAddConsulta);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquise por um paciente específico"));

        jLabel1.setText("Pesquisar por Nome:");

        jTFNome.setPreferredSize(new java.awt.Dimension(6, 25));

        jLabel2.setText("Pesquisar por CPF:");

        jTFCpf.setPreferredSize(new java.awt.Dimension(6, 25));

        jLabel3.setText("Pesquisar por ID:");

        jTFID.setPreferredSize(new java.awt.Dimension(6, 25));

        jBPesquisarPorNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarPorNomeActionPerformed(evt);
            }
        });

        jBPesquisarPorID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarPorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarPorIDActionPerformed(evt);
            }
        });

        jBPesquisarPorCPF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarPorCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarPorCPFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPesquisarPorNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTFCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarPorCPF)))
                .addGap(70, 70, 70)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTFID, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBPesquisarPorID)))
                .addGap(95, 95, 95))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBPesquisarPorNome)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFCpf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jBPesquisarPorID)
                        .addComponent(jBPesquisarPorCPF)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        TableListaPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        TableListaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Data de nascimento", "Sexo", "CPF", "Endereço", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableListaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableListaPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableListaPacientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TableListaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableListaPacientesMouseClicked

    }//GEN-LAST:event_TableListaPacientesMouseClicked

    private void jButtonAddConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddConsultaActionPerformed
        adicionarPacienteNaConsulta();
        //fecharATela();
    }//GEN-LAST:event_jButtonAddConsultaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void jBPesquisarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarPorNomeActionPerformed
        pesquisarPorNome();
    }//GEN-LAST:event_jBPesquisarPorNomeActionPerformed

    private void jBPesquisarPorCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarPorCPFActionPerformed
        pesquisarPorCpf();
    }//GEN-LAST:event_jBPesquisarPorCPFActionPerformed

    private void jBPesquisarPorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarPorIDActionPerformed
        pesquisarPorID();
    }//GEN-LAST:event_jBPesquisarPorIDActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableListaPacientes;
    private javax.swing.JButton jBPesquisarPorCPF;
    private javax.swing.JButton jBPesquisarPorID;
    private javax.swing.JButton jBPesquisarPorNome;
    private javax.swing.JButton jButtonAddConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFCpf;
    private javax.swing.JTextField jTFID;
    private javax.swing.JTextField jTFNome;
    // End of variables declaration//GEN-END:variables

    private void preencherTabela() {
        Session sessao = Utilitaria.getSession();//Peguei a sessao
        List<Paciente> Lpacientes = sessao.createQuery("from Paciente").list();//selecionei a tabela pacientes
        int i = 0;
        int linha = 1;
        //Data está aparecendo assim 1982-04-22
        //Deve aparecer assim: 22/04/1982

        for (Paciente p : Lpacientes) {
            //Conversão necessária para salvar a data no formato correto
            String dataN_do_paciente = String.valueOf(p.getDataDeNascimento());
            String ano = dataN_do_paciente.substring(0, 4);
            String mes = dataN_do_paciente.substring(5, 7);
            String dia = dataN_do_paciente.substring(8);
            String DataParaTabela = dia + "/" + mes + "/" + ano;

            if (TableListaPacientes.getRowCount() == 0) {
                DefaultTableModel table = (DefaultTableModel) TableListaPacientes.getModel();
                table.addRow(new Object[TableListaPacientes.getRowCount() + 1]);
            }

            TableListaPacientes.getModel().setValueAt(p.getId(), i, 0);
            TableListaPacientes.getModel().setValueAt(p.getNome(), i, 1);
            TableListaPacientes.getModel().setValueAt(DataParaTabela, i, 2);
            TableListaPacientes.getModel().setValueAt(p.getSexo(), i, 3);
            TableListaPacientes.getModel().setValueAt(p.getCpf(), i, 4);
            TableListaPacientes.getModel().setValueAt(p.getEndereco(), i, 5);
            TableListaPacientes.getModel().setValueAt(p.getTelefone(), i, 6);
            i++;
            DefaultTableModel tabelaListaPaciente = (DefaultTableModel) TableListaPacientes.getModel(); // pegando o modelo padrão da tabela

            tabelaListaPaciente.addRow(new Object[TableListaPacientes.getRowCount()]);
        }
    }

    private void adicionarPacienteNaConsulta() {
        Paciente pac = (Paciente) Utilitaria.getSession()
                .getNamedQuery("pacientePorID")
                .setInteger(0,
                        Integer.parseInt(TableListaPacientes.getModel().getValueAt(
                                        TableListaPacientes.getSelectedRow(), 0).toString()
                        ))
                .uniqueResult();
        paciente.setId(pac.getId());
        paciente.setNome(pac.getNome());
        paciente.setCpf(pac.getCpf());
        paciente.setDataDeNascimento(pac.getDataDeNascimento());
        paciente.setSexo(pac.getSexo());
        paciente.setTelefone(pac.getTelefone());
        paciente.setEndereco(pac.getEndereco());

        dispose();
// this.dispose();
    }

    private void pesquisarPorNome() {
        try {

            Paciente p = (Paciente) Utilitaria.getSession().getNamedQuery("pacientePorNome").setString("nome", jTFNome.getText()).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Paciente encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por nome", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                paciente.setId(p.getId());
                paciente.setNome(p.getNome());
                paciente.setCpf(p.getCpf());
                paciente.setDataDeNascimento(p.getDataDeNascimento());
                paciente.setSexo(p.getSexo());
                paciente.setTelefone(p.getTelefone());
                paciente.setEndereco(p.getEndereco());
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este paciente na consulta \n ERRO: " + e);
        }
    }

    private void pesquisarPorCpf() {
        try {

            Paciente p = (Paciente) Utilitaria.getSession().getNamedQuery("pacientePorCPF").setString("cpf", jTFCpf.getText()).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Paciente encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por CPF", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                paciente.setId(p.getId());
                paciente.setNome(p.getNome());
                paciente.setCpf(p.getCpf());
                paciente.setDataDeNascimento(p.getDataDeNascimento());
                paciente.setSexo(p.getSexo());
                paciente.setTelefone(p.getTelefone());
                paciente.setEndereco(p.getEndereco());
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este paciente na consulta \n ERRO: " + e);
        }

    }

    private void pesquisarPorID() {
        try {
            Paciente p = (Paciente) Utilitaria.getSession().getNamedQuery("pacientePorID").setInteger(0, Integer.parseInt(jTFID.getText())).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Paciente encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por ID", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                paciente.setId(p.getId());
                paciente.setNome(p.getNome());
                paciente.setCpf(p.getCpf());
                paciente.setDataDeNascimento(p.getDataDeNascimento());
                paciente.setSexo(p.getSexo());
                paciente.setTelefone(p.getTelefone());
                paciente.setEndereco(p.getEndereco());
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este paciente na consulta \n ERRO: " + e);
        }
    }

}
