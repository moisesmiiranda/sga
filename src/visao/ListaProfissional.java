/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Paciente;
import modelo.Profissional;
import org.hibernate.Session;
import util.Utilitaria;

/**
 *
 * @author Moisés
 */
public class ListaProfissional extends javax.swing.JDialog {

    /**
     * Creates new form ListaProfissional
     */
    private Profissional profissional;

    public ListaProfissional(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        preencherTabela();
    }

    public ListaProfissional(java.awt.Frame parent, boolean modal, Profissional p) {
        super(parent, modal);
        initComponents();
        profissional = p;
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableListaProfissionais = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIdentificacao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jBPesquisarPorNome = new javax.swing.JButton();
        jBPesquisarIDentificacao = new javax.swing.JButton();
        jBPesquisarPorID = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Todos os Profissionais");
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        TableListaProfissionais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Tipo", "Identificação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableListaProfissionais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableListaProfissionaisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableListaProfissionais);

        jButton1.setText("Adicionar Consulta");
        jButton1.setPreferredSize(new java.awt.Dimension(200, 35));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Pesquisar");
        jButton2.setPreferredSize(new java.awt.Dimension(200, 35));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jLabel1.setText("Pesquisa por Nome:");

        jTextFieldNome.setPreferredSize(new java.awt.Dimension(6, 25));

        jLabel2.setText("Pesquisar por Identificação:");

        jTextFieldIdentificacao.setPreferredSize(new java.awt.Dimension(6, 25));

        jLabel3.setText("Pesquisar por ID:");

        jTextFieldID.setPreferredSize(new java.awt.Dimension(6, 25));

        jBPesquisarPorNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarPorNomeActionPerformed(evt);
            }
        });

        jBPesquisarIDentificacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarIDentificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarIDentificacaoActionPerformed(evt);
            }
        });

        jBPesquisarPorID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/lupaBotao.png"))); // NOI18N
        jBPesquisarPorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarPorIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarPorNome)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextFieldIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarIDentificacao))
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarPorID)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldIdentificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarPorNome)
                    .addComponent(jBPesquisarIDentificacao)
                    .addComponent(jBPesquisarPorID))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TableListaProfissionaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableListaProfissionaisMouseClicked

    }//GEN-LAST:event_TableListaProfissionaisMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        adicionarProfissionalNaConsulta();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBPesquisarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarPorNomeActionPerformed
        pesquisarPorNome();
    }//GEN-LAST:event_jBPesquisarPorNomeActionPerformed

    private void jBPesquisarIDentificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarIDentificacaoActionPerformed
    pesquisarPorIdentificacao();
    }//GEN-LAST:event_jBPesquisarIDentificacaoActionPerformed

    private void jBPesquisarPorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarPorIDActionPerformed
        pesquisarPorID();
    }//GEN-LAST:event_jBPesquisarPorIDActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableListaProfissionais;
    private javax.swing.JButton jBPesquisarIDentificacao;
    private javax.swing.JButton jBPesquisarPorID;
    private javax.swing.JButton jBPesquisarPorNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldIdentificacao;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    private void preencherTabela() {
        Session sessao = Utilitaria.getSession();//Peguei a sessao
        List<Profissional> profissionais = sessao.createQuery("from Profissional").list();//selecionei a tabela pacientes
        int i = 0;
        int linha = 1;

        for (Profissional p : profissionais) {

            TableListaProfissionais.getModel().setValueAt(p.getId(), i, 0);
            TableListaProfissionais.getModel().setValueAt(p.getNome(), i, 1);
            TableListaProfissionais.getModel().setValueAt(p.getTipo(), i, 2);
            TableListaProfissionais.getModel().setValueAt(p.getIdentificacao(), i, 3);
            i++;

            DefaultTableModel tabela = (DefaultTableModel) TableListaProfissionais.getModel(); // pegando o modelo padrão da tabela

            tabela.addRow(new Object[linha]);
        }
    }

    private void adicionarProfissionalNaConsulta() {

        Profissional prof = (Profissional) Utilitaria.getSession()
                .getNamedQuery("profissionalPorID").setInteger(0,
                        Integer.parseInt(TableListaProfissionais.getModel()
                                .getValueAt(TableListaProfissionais.getSelectedRow(), 0)
                                .toString())).uniqueResult();

        profissional.setId(prof.getId());
        profissional.setNome(prof.getNome());
        profissional.setTipo(prof.getTipo());
        profissional.setIdentificacao(prof.getIdentificacao());

        dispose();
        //this.dispose();
    }

    private void pesquisarPorNome() {
     try {
            Profissional p = (Profissional) Utilitaria.getSession().getNamedQuery("profissionalPorNome").setString("nome",(jTextFieldNome.getText())).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Profissional encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por NOME", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                profissional.setId(p.getId());
                profissional.setNome(p.getNome());
                profissional.setIdentificacao(p.getIdentificacao());
                profissional.setTipo(p.getTipo());
                
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este profissional na consulta \n ERRO: " + e);
        }
    }

    private void pesquisarPorIdentificacao() {
        
        try {
            Profissional p = (Profissional) Utilitaria.getSession().getNamedQuery("profissionalPorIdentificacao").setString("identificacao",(jTextFieldIdentificacao.getText())).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Profissional encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por IDENTIFICAÇÃO", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                profissional.setId(p.getId());
                profissional.setNome(p.getNome());
                profissional.setIdentificacao(p.getIdentificacao());
                profissional.setTipo(p.getTipo());
                
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este profissional na consulta \n ERRO: " + e);
        }
    
    }

    private void pesquisarPorID() {
         try {
            Profissional p = (Profissional) Utilitaria.getSession().getNamedQuery("profissionalPorID").setInteger(0, Integer.parseInt(jTextFieldID.getText())).uniqueResult();

            int perg = JOptionPane.showConfirmDialog(null, "Profissional encontrado = " + p.getNome() + "\n Deseja adicionar a um atendimento?", "Resultado da busca por ID", JOptionPane.YES_NO_OPTION);

            if (perg == 0) {

                profissional.setId(p.getId());
                profissional.setNome(p.getNome());
                profissional.setIdentificacao(p.getIdentificacao());
                profissional.setTipo(p.getTipo());
                
                dispose();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível adicionar este profissional na consulta \n ERRO: " + e);
        }
    }
}
